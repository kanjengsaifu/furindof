<?php if ( ! defined('BASEPATH') ) exit('No direct script access allowed');

    class Master_prosedur_model extends CI_Model{

        public function __construct() {
            parent::__construct();
        }
        public function TambahProsedur($dataProsedur)
        {

          $this->IDUser         = $_SESSION['IDUser'];
          $this->kodeProsedur   = $this->security->xss_clean($dataProsedur['kode']);
          $this->namaKonsultan  = $this->security->xss_clean($dataProsedur['namaKonsultan']);
          $this->namaTraining   = $this->security->xss_clean($dataProsedur['namaTraining']);
          $this->namaSystem     = $this->security->xss_clean($dataProsedur['namaSystem']);
          $this->namaMedia      = $this->security->xss_clean($dataProsedur['namaMedia']);
          $this->deskripsi      = $this->security->xss_clean($dataProsedur['deskripsi']);
         
          $this->userEntry    = $this->IDUser;
          $this->dateEntry    = RealDateTime();
         
          $this->db->query("insert into ref_prosedur (kode_prosedur, nama_prosedur_konsultan, 
                            nama_prosedur_training, nama_prosedur_system, nama_prosedur_media,
                            deskripsi, date_entry, user_entry, last_update, user_update) 
                            values('".$this->kodeProsedur."','".$this->namaKonsultan."',  '".$this->namaTraining."', 
                                  '".$this->namaSystem."', '".$this->namaMedia."',
                                  '".$this->deskripsi."',
                                  '".$this->dateEntry."','".$this->userEntry."','','0')");

          $strMessage  = 'Tambah Prosedur telah berhasil';
          $messageData = ConstructMessageResponse($strMessage , 'success');

          echo $messageData."<script>alert('".$strMessage."');window.resetForm();dialogFormBaruClose();</script>";
        }


        public function UbahProsedur($dataProsedur)
        {

          $this->IDUser           = $_SESSION['IDUser']; 
          $this->IDProsedur       = $this->security->xss_clean($dataProsedur['Idx']);
          $this->kodeProsedur     = $this->security->xss_clean($dataProsedur['kode']);
          $this->namaKonsultan    = $this->security->xss_clean($dataProsedur['namaKonsultan']);
          $this->namaTraining     = $this->security->xss_clean($dataProsedur['namaTraining']);
          $this->namaMedia        = $this->security->xss_clean($dataProsedur['namaMedia']);
          $this->namaSystem       = $this->security->xss_clean($dataProsedur['namaSystem']);
          $this->deskripsi        = $this->security->xss_clean($dataProsedur['deskripsi']);
          $this->userUpdate       = $this->IDUser; 
          $this->lastUpdate       = RealDateTime();

          //cek kode yang sama
          $this->selectQuery = $this->db->query("select id_prosedur from ref_prosedur 
                                                where kode_prosedur ='".$this->kodeProsedur."' 
                                                 and id_prosedur <>'".$this->IDProsedur."' limit 1");
          if ($this->selectQuery->num_rows() > 0)
          {
              $strMessage  = 'Kode prosedur sudah tercatat, silahkan gunakan kode prosedur yang lain';
              $messageData = ConstructMessageResponse($strMessage , 'danger');

              echo $messageData."<script>alert('".$strMessage."');</script>";

              exit;
          }

          $this->db->query("update ref_prosedur set kode_prosedur = '".$this->kodeProsedur."', 
                            nama_prosedur_konsultan = '".$this->namaKonsultan."',
                            nama_prosedur_training = '".$this->namaTraining."',
                            nama_prosedur_media   = '".$this->namaMedia."',
                            nama_prosedur_system = '".$this->namaSystem."',
                            deskripsi ='".$this->deskripsi."', 
                            last_update ='".$this->lastUpdate."', 
                            user_update ='".$this->userUpdate."'
                            where id_prosedur = '".$this->IDProsedur."'");
    
          $strMessage  = 'Ubah prosedur telah berhasil';
          $messageData = ConstructMessageResponse($strMessage , 'success');

          echo $messageData."<script>alert('".$strMessage."');loadGridData();window.dialogFormUbahClose()</script>";
        
        }
  
        public function HapusProsedur($IDProsedur)
        {
            
            $this->IDProsedur = $this->security->xss_clean($IDProsedur);
            $this->IDUser   = $_SESSION['IDUser'];

            //cek di tabeL2 tertentu yang berhubungan dengan proses ini
            $this->arrData = array();
            $this->arrData[] = array("tableName" => "trx_program_kerja", "SQLWhere" => "id_prosedur = '".$this->IDProsedur."'");

            if (!isCheckTransactionOK($this->arrData))
            {
              $strMessage  = 'Hapus indikator tidak berhasil, terdapat beberapa transaksi dengan referensi yang sama';
              $messageData = ConstructMessageResponse($strMessage , 'danger');
              echo $messageData;
              exit;
            }

            //hapus 
            $this->selectQuery = $this->db->query("delete from ref_prosedur where id_prosedur = '".$this->IDProsedur."'");
            
            $strMessage  = 'Hapus Prosedur telah berhasil ';
            $messageData = ConstructMessageResponse($strMessage , 'success');

            echo $messageData."<script>loadGridData();</script>";
            exit;
                
        }

  
        public function GetDaftarProsedur()
        {
          $this->selectQuery = $this->db->query("SELECT id_prosedur as IDProsedur, kode_prosedur as KodeProsedur, 
                                                nama_prosedur_konsultan as NamaProsedurKonsultan,
                                                nama_prosedur_training as NamaProsedurTraining,
                                                nama_prosedur_media as NamaProsedurMedia,
                                                nama_prosedur_system as NamaProsedurSystem,
                                                deskripsi as Deskripsi    
                                                FROM ref_prosedur    
                                                ORDER BY id_prosedur asc");
          $arrSelectQuery = array();

          foreach ($this->selectQuery->result_array() as $row) {

            $strDataAction = "<button type='button' class='btn btn-xs btn-warning' onclick='dialogFormEditShow()'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>&nbsp;<button type='button' class='btn btn-xs btn-danger'  onclick='deleteConfirmShow()'><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>";

            $arrSelectQuery[] = array('idx'        =>  $row['IDProsedur'],
                                       'kode'      =>  $row['KodeProsedur'],
                                       'namaKonsultan' =>  $row['NamaProsedurKonsultan'],
                                       'namaTraining'  =>  $row['NamaProsedurTraining'],
                                       'namaMedia'  =>  $row['NamaProsedurMedia'],
                                       'namaSystem'    =>  $row['NamaProsedurSystem'],
                                       'deskripsi' =>  $row['Deskripsi'],
                                       'action'    =>  $strDataAction
                                      );
          }

          return json_encode($arrSelectQuery);

        }

    }
