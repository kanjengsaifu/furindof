<?php if ( ! defined('BASEPATH') ) exit('No direct script access allowed');

    class Master_bidang_model extends CI_Model{

        public function __construct() {
            parent::__construct();
        }

        public function TambahBidang($dataBidang)
        {

          $this->IDUser       = $_SESSION['IDUser'];
          $this->kodeBidang   = $this->security->xss_clean($dataBidang['kode']);
          $this->namaBidang   = $this->security->xss_clean($dataBidang['nama']);
          $this->deskripsi    = $this->security->xss_clean($dataBidang['deskripsi']);
         
          $this->userEntry    = $this->IDUser;
          $this->dateEntry    = RealDateTime();

          //cek kode yang sama
          $this->selectQuery = $this->db->query("select id_bidang from ref_bidang where kode_bidang ='".$this->kodeBidang."'");
          if ($this->selectQuery->num_rows() > 0)
          {
              $strMessage  = 'Kode bidang sudah tercatat, silahkan gunakan kode bidang yang lain';
              $messageData = ConstructMessageResponse($strMessage , 'danger');

              echo $messageData;

              exit;
          }
        
          //cek nama yang sama
          $this->selectQuery = $this->db->query("select id_bidang from ref_bidang where nama_bidang ='".$this->namaBidang."'");
          if ($this->selectQuery->num_rows() > 0)
          {
              $strMessage  = 'Nama bidang sudah tercatat, silahkan gunakan nama bidang yang lain';
              $messageData = ConstructMessageResponse($strMessage , 'danger');

              echo $messageData;

              exit;
          }

          $this->db->query("insert into ref_bidang (kode_bidang, nama_bidang, deskripsi, date_entry, user_entry, last_update, user_update) 
                            values('".$this->kodeBidang."','".$this->namaBidang."',  '".$this->deskripsi."',
                                  '".$this->dateEntry."','".$this->userEntry."','','0')");

          $strMessage  = 'Tambah bidang telah berhasil';
          $messageData = ConstructMessageResponse($strMessage , 'success');

          echo $messageData."<script>alert('".$strMessage."');window.resetForm();dialogFormBaruClose();</script>";
        }


        public function UbahBidang($dataBidang)
        {

          $this->IDUser           = $_SESSION['IDUser']; 
          $this->IDBidang         = $this->security->xss_clean($dataBidang['Idx']);
          $this->kodeBidang       = $this->security->xss_clean($dataBidang['kode']);
          $this->namaBidang       = $this->security->xss_clean($dataBidang['nama']);
          $this->deskripsi        = $this->security->xss_clean($dataBidang['deskripsi']);
          $this->userUpdate       = $this->IDUser; 
          $this->lastUpdate       = RealDateTime();

          //cek kode yang sama
          $this->selectQuery = $this->db->query("select id_bidang from ref_bidang where kode_bidang ='".$this->kodeBidang."' 
                                                 and id_bidang <>'".$this->IDBidang."' limit 1");
          if ($this->selectQuery->num_rows() > 0)
          {
              $strMessage  = 'Kode bidang sudah tercatat, silahkan gunakan kode bidang yang lain';
              $messageData = ConstructMessageResponse($strMessage , 'danger');

              echo $messageData;

              exit;
          }
        
          //cek nama yang sama
          $this->selectQuery = $this->db->query("select id_bidang from ref_bidang where nama_bidang ='".$this->namaBidang."' 
                                                 and id_bidang <>'".$this->IDBidang."' limit 1");
          if ($this->selectQuery->num_rows() > 0)
          {
              $strMessage  = 'Nama bidang sudah tercatat, silahkan gunakan nama bidang yang lain';
              $messageData = ConstructMessageResponse($strMessage , 'danger');

              echo $messageData;

              exit;
          }

          $this->db->query("update ref_bidang set kode_bidang = '".$this->kodeBidang."', 
                            nama_bidang = '".$this->namaBidang."',
                            deskripsi ='".$this->deskripsi."', 
                            last_update ='".$this->lastUpdate."', 
                            user_update ='".$this->userUpdate."'
                            where id_bidang = '".$this->IDBidang."'");
    
          $strMessage  = 'Ubah bidang telah berhasil';
          $messageData = ConstructMessageResponse($strMessage , 'success');

          echo $messageData."<script>alert('".$strMessage."');loadGridData();window.dialogFormUbahClose()</script>";
        
        }
  
        public function HapusBidang($IDBidang)
        {
            
            $this->IDBidang = $this->security->xss_clean($IDBidang);
            $this->IDUser   = $_SESSION['IDUser']; 

            //cek di tabeL2 tertentu yang berhubungan dengan proses ini
            $this->arrData = array();
            $this->arrData[] = array("tableName" => "mst_client", "SQLWhere" => "id_bidang = '".$this->IDBidang."'",
                                     "tableName" => "mst_program", "SQLWhere" => "id_bidang = '".$this->IDBidang."'");

            if (!isCheckTransactionOK($this->arrData))
            {
              $strMessage  = 'Hapus bidang tidak berhasil, terdapat beberapa transaksi dengan referensi yang sama';
              $messageData = ConstructMessageResponse($strMessage , 'danger');
              echo $messageData;
              exit;
            }

            //hapus 
            $this->selectQuery = $this->db->query("delete from ref_bidang where id_bidang = '".$this->IDBidang."'");
            
            $strMessage  = 'Hapus bidang telah berhasil ';
            $messageData = ConstructMessageResponse($strMessage , 'success');

            echo $messageData."<script>loadGridData();</script>";
            exit;
                
        }

        public function GetDaftarBidang()
        {
          $this->selectQuery = $this->db->query("SELECT id_bidang as IDBidang, kode_bidang as KodeBidang, nama_bidang as NamaBidang,
                                                 deskripsi as Deskripsi    
                                                 FROM ref_bidang    
                                                 ORDER BY id_bidang asc");

          $arrSelectQuery = array();

          foreach ($this->selectQuery->result_array() as $row) {

            $strDataAction = "<button type='button' class='btn btn-xs btn-warning' onclick='dialogFormEditShow()'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>&nbsp;<button type='button' class='btn btn-xs btn-danger'  onclick='deleteConfirmShow()'><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>";

            $arrSelectQuery[] = array('idx'        =>  $row['IDBidang'],
                                       'kode'      =>  $row['KodeBidang'],
                                       'nama'      =>  $row['NamaBidang'],
                                       'deskripsi' =>  $row['Deskripsi'],
                                       'action'    =>  $strDataAction
                                      );
          }

          return json_encode($arrSelectQuery);

        }

    }
